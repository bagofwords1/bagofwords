name: e2e tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual trigger

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        db: [sqlite, postgres]
        include:
          - db: sqlite
          - db: postgres
            db_url: postgresql://postgres:postgres@localhost:5432/postgres
    
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_versioned.txt
        
    - name: Check for AI file changes
      id: changes
      uses: dorny/paths-filter@v3
      with:
        filters: |
          ai_files:
            - 'backend/app/ai/**'

    - name: Run Alembic migrations (Postgres only)
      if: matrix.db == 'postgres'
      working-directory: ./backend
      env:
        BOW_DATABASE_URL: ${{ matrix.db_url }}
      run: |
        alembic upgrade head

    - name: Run AI tests (SQLite)
      if: steps.changes.outputs.ai_files == 'true' && matrix.db == 'sqlite'
      working-directory: ./backend
      env:
        TESTING: "true"
        ENVIRONMENT: "production"
        OPENAI_API_KEY_TEST: ${{ secrets.OPENAI_API_KEY_TEST }}
      run: |
        pytest -s -m ai --disable-warnings

    - name: Run AI tests (Postgres)
      if: steps.changes.outputs.ai_files == 'true' && matrix.db == 'postgres'
      working-directory: ./backend
      env:
        TESTING: "true"
        ENVIRONMENT: "production"
        OPENAI_API_KEY_TEST: ${{ secrets.OPENAI_API_KEY_TEST }}
        BOW_DATABASE_URL: ${{ matrix.db_url }}
      run: |
        pytest -s -m ai --disable-warnings

    - name: Run E2E tests (SQLite)
      if: matrix.db == 'sqlite'
      working-directory: ./backend
      env:
        TESTING: "true"
        ENVIRONMENT: "production"
        OPENAI_API_KEY_TEST: ${{ secrets.OPENAI_API_KEY_TEST }}
      run: |
        pytest -s -m e2e --disable-warnings

    - name: Run E2E tests (Postgres)
      if: matrix.db == 'postgres'
      working-directory: ./backend
      env:
        TESTING: "true"
        ENVIRONMENT: "production"
        OPENAI_API_KEY_TEST: ${{ secrets.OPENAI_API_KEY_TEST }}
        BOW_DATABASE_URL: ${{ matrix.db_url }}
      run: |
        pytest -s -m e2e --disable-warnings

  dispatch-build:
    if: github.ref == 'refs/heads/main'
    needs: e2e-tests
    runs-on: ubuntu-latest
    steps:
    - name: Trigger Docker build workflow
      uses: peter-evans/repository-dispatch@v2
      with:
        token: ${{ secrets.PAT_TOKEN }}
        event-type: e2e-tests-passed