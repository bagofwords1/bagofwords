apiVersion: v1
kind: ConfigMap
metadata:
  name: bowapp
  namespace: {{.Release.Namespace}}
data:
  # Database URL - only set if not using existing secret
  {{- if (empty .Values.postgresql.auth.existingSecret) }}
  BOW_DATABASE_URL: postgresql://{{.Values.postgresql.auth.username}}:{{.Values.postgresql.auth.password}}@{{.Release.Name}}-postgresql:5432/{{.Values.postgresql.auth.database}}
  {{- end }}
  
  # Application configuration - always include these
  BOW_BASE_URL: {{.Values.config.baseUrl | quote}}
  BOW_ENCRYPTION_KEY: {{.Values.config.encryptionKey | quote}}
  BOW_GOOGLE_CLIENT_ID: {{.Values.config.googleClientId | quote}}
  BOW_GOOGLE_CLIENT_SECRET: {{.Values.config.googleClientSecret | quote}}
  BOW_GOOGLE_AUTH_ENABLED: {{.Values.config.googleOauthEnabled | quote}}
  BOW_SMTP_HOST: {{.Values.config.smtp.host | quote}}
  BOW_SMTP_PORT: {{.Values.config.smtp.port | quote}}
  BOW_SMTP_USERNAME: {{.Values.config.smtp.username | quote}}
  BOW_SMTP_PASSWORD: {{.Values.config.smtp.password | quote}}
  BOW_SMTP_FROM_NAME: {{.Values.config.smtp.from_name | quote}}
  BOW_SMTP_FROM_EMAIL: {{.Values.config.smtp.from_email | quote}}
  BOW_SMTP_USE_TLS: {{.Values.config.smtp.use_tls | quote}}
  BOW_SMTP_USE_SSL: {{.Values.config.smtp.use_ssl | quote}}
  BOW_SMTP_USE_CREDENTIALS: {{.Values.config.smtp.use_credentials | quote}}
  BOW_SMTP_VALIDATE_CERTS: {{.Values.config.smtp.validate_certs | quote}}
  BOW_INTERCOM_ENABLED: {{.Values.config.intercomEnabled | quote}}
  BOW_ALLOW_UNINVITED_SIGNUPS: {{.Values.config.allowUninvitedSignups | quote}}
  BOW_ALLOW_MULTIPLE_ORGANIZATIONS: {{.Values.config.allowMultipleOrganizations | quote}}
  BOW_VERIFY_EMAILS: {{.Values.config.verifyEmails | quote}}
  # OIDC providers rendered as YAML inside the config file
  BOW_OIDC_JSON: {{ .Values.config.oidcProviders | toJson | quote }}
  
  bowConfig: |
    # Deployment Configuration
    base_url: ${BOW_BASE_URL}

    # Feature Flags
    features:
      allow_uninvited_signups: ${BOW_ALLOW_UNINVITED_SIGNUPS}
      allow_multiple_organizations: ${BOW_ALLOW_MULTIPLE_ORGANIZATIONS}
      verify_emails: ${BOW_VERIFY_EMAILS}

    google_oauth:
      enabled: ${BOW_GOOGLE_AUTH_ENABLED}
      client_id: ${BOW_GOOGLE_CLIENT_ID}
      client_secret: ${BOW_GOOGLE_CLIENT_SECRET}

    encryption_key: ${BOW_ENCRYPTION_KEY}
    
    smtp_settings:
      host: ${BOW_SMTP_HOST}
      port: ${BOW_SMTP_PORT}
      username: ${BOW_SMTP_USERNAME}
      password: ${BOW_SMTP_PASSWORD}
      from_name: ${BOW_SMTP_FROM_NAME}
      from_email: ${BOW_SMTP_FROM_EMAIL}
      use_tls: ${BOW_SMTP_USE_TLS}
      use_ssl: ${BOW_SMTP_USE_SSL}
      use_credentials: ${BOW_SMTP_USE_CREDENTIALS}
      validate_certs: ${BOW_SMTP_VALIDATE_CERTS}

    intercom:
      enabled: ${BOW_INTERCOM_ENABLED}

    # OpenID Connect providers
    oidc_providers:
{{- if .Values.config.oidcProviders }}
{{- range $idx, $p := .Values.config.oidcProviders }}
      - name: {{ $p.name | quote }}
        enabled: {{ (default true $p.enabled) }}
        issuer: {{ $p.issuer | quote }}
        client_id: {{ $p.clientId | quote }}
        client_secret: {{ $p.clientSecret | quote }}
        scopes: {{ (default (list "openid" "profile" "email") $p.scopes) | toJson }}
        pkce: {{ (default true $p.pkce) }}
        client_auth_method: {{ (default "basic" $p.clientAuthMethod) | quote }}
        discovery: {{ (default true $p.discovery) }}
        uid_claim: {{ (default "sub" $p.uidClaim) | quote }}
{{- if $p.redirectPath }}
        redirect_path: {{ $p.redirectPath | quote }}
{{- end }}
{{- if $p.extraAuthorizeParams }}
        extra_authorize_params: {{ $p.extraAuthorizeParams | toJson }}
{{- end }}
{{- if $p.extraTokenParams }}
        extra_token_params: {{ $p.extraTokenParams | toJson }}
{{- end }}
{{- end }}
{{- else }}
      []
{{- end }}
