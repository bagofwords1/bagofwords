"""add catalog entities

Revision ID: 95de3b2ebc88
Revises: d2af7a7ec064
Create Date: 2025-10-19 11:09:22.208259

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '95de3b2ebc88'
down_revision: Union[str, None] = 'd2af7a7ec064'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('entities',
    sa.Column('organization_id', sa.String(length=36), nullable=False),
    sa.Column('owner_id', sa.String(length=36), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('code', sa.Text(), nullable=False),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('original_data_model', sa.JSON(), nullable=True),
    sa.Column('view', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.Column('pinned', sa.Boolean(), nullable=False),
    sa.Column('last_refreshed_at', sa.DateTime(), nullable=True),
    sa.Column('auto_refresh_enabled', sa.Boolean(), nullable=False),
    sa.Column('auto_refresh_interval', sa.Integer(), nullable=True),
    sa.Column('auto_refresh_interval_unit', sa.String(), nullable=True),
    sa.Column('private_status', sa.String(length=50), nullable=True),
    sa.Column('global_status', sa.String(length=50), nullable=True),
    sa.Column('reviewed_by_user_id', sa.String(length=36), nullable=True),
    sa.Column('source_step_id', sa.String(length=36), nullable=True),
    sa.Column('trigger_reason', sa.String(length=255), nullable=True),
    sa.Column('ai_source', sa.String(length=50), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['reviewed_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['source_step_id'], ['steps.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('entities', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_entities_id'), ['id'], unique=True)
        batch_op.create_index(batch_op.f('ix_entities_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_entities_owner_id'), ['owner_id'], unique=False)

    op.create_table('entity_data_source_association',
    sa.Column('entity_id', sa.String(length=36), nullable=False),
    sa.Column('data_source_id', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['data_source_id'], ['data_sources.id'], ),
    sa.ForeignKeyConstraint(['entity_id'], ['entities.id'], ),
    sa.PrimaryKeyConstraint('entity_id', 'data_source_id'),
    sa.UniqueConstraint('entity_id', 'data_source_id', name='uq_entity_data_source')
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    op.drop_table('entity_data_source_association')
    with op.batch_alter_table('entities', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_entities_owner_id'))
        batch_op.drop_index(batch_op.f('ix_entities_organization_id'))
        batch_op.drop_index(batch_op.f('ix_entities_id'))

    op.drop_table('entities')
    # ### end Alembic commands ###
