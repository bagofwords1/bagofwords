"""agent execution and tools data models

Revision ID: 2c6238f56d1c
Revises: 8c1061a09336
Create Date: 2025-08-23 23:29:15.931489

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2c6238f56d1c'
down_revision: Union[str, None] = '8c1061a09336'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('agent_executions',
    sa.Column('completion_id', sa.String(length=36), nullable=False),
    sa.Column('organization_id', sa.String(length=36), nullable=True),
    sa.Column('user_id', sa.String(length=36), nullable=True),
    sa.Column('report_id', sa.String(length=36), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('total_duration_ms', sa.Float(), nullable=True),
    sa.Column('first_token_ms', sa.Float(), nullable=True),
    sa.Column('thinking_ms', sa.Float(), nullable=True),
    sa.Column('latest_seq', sa.Integer(), nullable=False),
    sa.Column('token_usage_json', sa.JSON(), nullable=True),
    sa.Column('error_json', sa.JSON(), nullable=True),
    sa.Column('config_json', sa.JSON(), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['completion_id'], ['completions.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['report_id'], ['reports.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('agent_executions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_agent_executions_completion_id'), ['completion_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_agent_executions_id'), ['id'], unique=True)

    op.create_table('context_snapshots',
    sa.Column('agent_execution_id', sa.String(length=36), nullable=False),
    sa.Column('kind', sa.String(), nullable=False),
    sa.Column('context_view_json', sa.JSON(), nullable=False),
    sa.Column('prompt_text', sa.String(), nullable=True),
    sa.Column('prompt_tokens', sa.String(), nullable=True),
    sa.Column('hash', sa.String(), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['agent_execution_id'], ['agent_executions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('context_snapshots', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_context_snapshots_agent_execution_id'), ['agent_execution_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_context_snapshots_id'), ['id'], unique=True)

    op.create_table('plan_decisions',
    sa.Column('agent_execution_id', sa.String(length=36), nullable=False),
    sa.Column('seq', sa.Integer(), nullable=False),
    sa.Column('loop_index', sa.Integer(), nullable=False),
    sa.Column('plan_type', sa.String(), nullable=True),
    sa.Column('analysis_complete', sa.Boolean(), nullable=False),
    sa.Column('reasoning', sa.String(), nullable=True),
    sa.Column('assistant', sa.String(), nullable=True),
    sa.Column('final_answer', sa.String(), nullable=True),
    sa.Column('action_name', sa.String(), nullable=True),
    sa.Column('action_args_json', sa.JSON(), nullable=True),
    sa.Column('metrics_json', sa.JSON(), nullable=True),
    sa.Column('context_snapshot_id', sa.String(length=36), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['agent_execution_id'], ['agent_executions.id'], ),
    sa.ForeignKeyConstraint(['context_snapshot_id'], ['context_snapshots.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('plan_decisions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_plan_decisions_agent_execution_id'), ['agent_execution_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_plan_decisions_id'), ['id'], unique=True)
        batch_op.create_unique_constraint('uq_plan_decisions_execution_seq', ['agent_execution_id', 'seq'])

    op.create_table('tool_executions',
    sa.Column('agent_execution_id', sa.String(length=36), nullable=False),
    sa.Column('plan_decision_id', sa.String(length=36), nullable=True),
    sa.Column('tool_name', sa.String(), nullable=False),
    sa.Column('tool_action', sa.String(), nullable=True),
    sa.Column('arguments_json', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('success', sa.Boolean(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('duration_ms', sa.Float(), nullable=True),
    sa.Column('attempt_number', sa.Integer(), nullable=False),
    sa.Column('max_retries', sa.Integer(), nullable=False),
    sa.Column('token_usage_json', sa.JSON(), nullable=True),
    sa.Column('result_summary', sa.String(), nullable=True),
    sa.Column('result_json', sa.JSON(), nullable=True),
    sa.Column('artifact_refs_json', sa.JSON(), nullable=True),
    sa.Column('created_widget_id', sa.String(length=36), nullable=True),
    sa.Column('created_step_id', sa.String(length=36), nullable=True),
    sa.Column('error_message', sa.String(), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('context_snapshot_id', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['agent_execution_id'], ['agent_executions.id'], ),
    sa.ForeignKeyConstraint(['context_snapshot_id'], ['context_snapshots.id'], ),
    sa.ForeignKeyConstraint(['created_step_id'], ['steps.id'], ),
    sa.ForeignKeyConstraint(['created_widget_id'], ['widgets.id'], ),
    sa.ForeignKeyConstraint(['plan_decision_id'], ['plan_decisions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tool_executions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tool_executions_agent_execution_id'), ['agent_execution_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_tool_executions_id'), ['id'], unique=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
  
    with op.batch_alter_table('tool_executions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tool_executions_id'))
        batch_op.drop_index(batch_op.f('ix_tool_executions_agent_execution_id'))

    op.drop_table('tool_executions')
    with op.batch_alter_table('plan_decisions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_plan_decisions_id'))
        batch_op.drop_index(batch_op.f('ix_plan_decisions_agent_execution_id'))

    op.drop_table('plan_decisions')
    with op.batch_alter_table('context_snapshots', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_context_snapshots_id'))
        batch_op.drop_index(batch_op.f('ix_context_snapshots_agent_execution_id'))

    op.drop_table('context_snapshots')
    with op.batch_alter_table('agent_executions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_agent_executions_id'))
        batch_op.drop_index(batch_op.f('ix_agent_executions_completion_id'))

    op.drop_table('agent_executions')
    # ### end Alembic commands ###
