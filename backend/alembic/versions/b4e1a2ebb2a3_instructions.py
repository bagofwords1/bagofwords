"""instructions

Revision ID: b4e1a2ebb2a3
Revises: c7a3a3c06220
Create Date: 2025-07-16 20:43:46.552309

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b4e1a2ebb2a3'
down_revision: Union[str, None] = 'c7a3a3c06220'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('instructions',
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('thumbs_up', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('draft', 'published', 'archived', name='instructionstatus'), nullable=False),
    sa.Column('category', sa.Enum('code_gen', 'data_modeling', 'general', name='instructioncategory'), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('organization_id', sa.String(length=36), nullable=False),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('instructions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_instructions_id'), ['id'], unique=True)
        batch_op.create_index(batch_op.f('ix_instructions_text'), ['text'], unique=False)

    op.create_table('instruction_data_source_association',
    sa.Column('instruction_id', sa.String(length=36), nullable=False),
    sa.Column('data_source_id', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['data_source_id'], ['data_sources.id'], ),
    sa.ForeignKeyConstraint(['instruction_id'], ['instructions.id'], ),
    sa.PrimaryKeyConstraint('instruction_id', 'data_source_id')
    )
   
    # ### end Alembic commands ###


def downgrade() -> None:

    op.drop_table('instruction_data_source_association')
    with op.batch_alter_table('instructions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_instructions_text'))
        batch_op.drop_index(batch_op.f('ix_instructions_id'))

    op.drop_table('instructions')
    # ### end Alembic commands ###
