# Multi-stage build for optimized production image
FROM node:18-alpine as builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package.json yarn.lock ./

# Install dependencies
RUN yarn install --frozen-lockfile --production=false

# Copy source code
COPY . .

# Build arguments
ARG NUXT_BACKEND_URL=http://localhost:8000
ARG NUXT_BACKEND_WS_URL=ws://localhost:8000

# Set environment variables for build
ENV NUXT_BACKEND_URL=$NUXT_BACKEND_URL
ENV NUXT_BACKEND_WS_URL=$NUXT_BACKEND_WS_URL
ENV NODE_ENV=production

# Build the application
RUN yarn build

# Production stage
FROM node:18-alpine as production

# Set environment variables
ENV NODE_ENV=production
ENV NUXT_HOST=0.0.0.0
ENV NUXT_PORT=3000

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nuxt -u 1001

# Set working directory
WORKDIR /app

# Copy built application from builder stage
COPY --from=builder --chown=nuxt:nodejs /app/.output ./

# Switch to non-root user
USER nuxt

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:3000/ || exit 1

# Start the application
CMD ["node", "server/index.mjs"]